snippet init "Script [INIT]ialize" b
#!/bin/sh

# ${1:DESCRIPTION}

$0
endsnippet

snippet err "[E]rror function" b
error() { notify-send "ï„ª ERROR" "\$1"; exit 1;}
$0
endsnippet

snippet int "[I]nternet check" b
internet() { ping -q -c 1 1.1.1.1 > /dev/null || exit ;}
$0
endsnippet

snippet req "[REQ]uire" b
require() {	ifinstalled $1 ;}
$0
endsnippet

snippet dpr "[D]menu [PR]ompt" b
dprompt() { printf "\$1" | dmenu -i -p "\$2" ;}
$0
endsnippet

snippet chf "[CH]eck [F]ile" b
find$1() { [ -f \$${1:FilePath} ] || error "$1 file not found." ;}
$0
endsnippet

snippet chd "[CH]eck Directory" b
find$1() { [ -d \$${1:FilePath} ] || error "$1 file not found." ;}
$0
endsnippet

snippet chv "[CH]eck [V]ariable" b
find$1() { [ -z ${${1:Variable}+x} ] && error "$1 variable not found." ;}
$0
endsnippet

snippet chve "[CH]eck [V]ariable [E]mpty" b
find$1() { [ -z ${1:Variable} ] && error "$1 variable not found or empty" ;}
$0
endsnippet

snippet grp "[GR]e[P]"
grep -Fxq ${1:Query} ${2:FilePath}
endsnippet

snippet func "[FUNC]tion" b
${1:FunctionName}() {
	$0
}
endsnippet

snippet dprompt "[PROMPT] Dmenu" b
prompt() { printf "$1" | dmenu -i -p "\$2" ;}
$0
endsnippet

snippet rpr "[PROMPT] Rofi" b
prompt() { printf "\$1" | rofi -dmenu -i -p "\$2" ;}
$0
endsnippet

snippet ext "Quit option" b
ext() {
	if [[ "\$1" == "Quit" ]]; then
		notify-send "Exiting" ; exit 1
	fi ;}
$0
endsnippet
