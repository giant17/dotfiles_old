# Luke's lf settings

# Basic vars
set shell sh
set previewer ~/.config/lf/scope
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set info size
#set color256
#set drawbox on

# cmds/functions
cmd trash ${{
	set -f
	mv -f $fx ~/.local/share/trash
	notify-send "ï‡¸ Moved to trash." "File(s) moved to trash."
}}

cmd open ${{
    case $(file --mime-type $f -b) in
    	text/troff) man ./ $f;;
        text/*) $EDITOR $fx;;
	image/x-xcf|image/svg+xml) setsid gimp $f >/dev/null 2>&1 & ;;
	image/*) rotdir $f | setsid sxiv -ai >/dev/null 2>&1 & ;;
	audio/*) mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f ;;
	video/*) setsid mpv --input-ipc-server=/tmp/mpvsoc$(date +%%s) $f -quiet >/dev/null 2>&1 & ;;
	*.tif) setsid sxiv &;;
	application/pdf) setsid zathura $fx >/dev/null 2>&1 & ;;
        *) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done;;
    esac
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/n]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval mv -iv $fx $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ~/.config/directories | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd detox ${{
	set -f
	detox -s lower $fx
}}

cmd movetodir ${{
	set -f
	clear; echo "Move to where?"
	dest="$(find -t d | fzf)" &&
	eval mv $fx $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd perms ${{
	set -f
	eval chmod --reference ~/.bash_history $f
}}

cmd bulk-rename ${{
        index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
        if [ -n "${fs}" ]; then
                echo "$fs" > $index
        else
                echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
        fi
        index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
        cat $index > $index_edit
        $EDITOR $index_edit
        if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
                max=$(($(cat $index | wc -l)+1))
                counter=1
                while [ $counter -le $max ]; do
                        a="$(cat $index | sed "${counter}q;d")"
                        b="$(cat $index_edit | sed "${counter}q;d")"
                        counter=$(($counter+1))

                        [ "$a" = "$b" ] && continue
                        [ -e "$b" ] && echo "File exists: $b" && continue
                        mv "$a" "$b"
                done
        else
                echo "Number of lines must stay the same"
        fi
        rm $index $index_edit
}}



# Bindings
map se extract
map sg !nvim -c MagitOnly $f
map c $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/directories | fzf)"
map J $lf -remote "send $id cd $(cut -d'	' -f2 ~/.config/directories | fzf)"
map O $lf -remote "send $id open $(cut -d' 	' -f2 ~/.config/files | fzf)"
map o $lf -remote "send $id select $(ls -a | fzf)"
map l open
map <c-r> bulk-rename "$fx"
map X detox
map D trash
map gh
map I !du -sh $f
map gg top
map C copyto
map M moveto
map Z set hidden!
map R reload
map a push %mkdir<space>
map r push :rename<space>
map <enter> shell
map x perms
